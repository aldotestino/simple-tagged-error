name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Test, Build & Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

      - name: Build
        run: bun run build

      - name: Check if version already published
        id: check_version
        run: |
          VERSION=$(jq -r .version package.json)
          if npm view "$(jq -r .name package.json)" versions | grep -q "\"$VERSION\""; then
            echo "Version $VERSION already exists on npm. Stopping workflow."
            echo "should_skip=true" >> $GITHUB_OUTPUT
          else
            echo "should_skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.check_version.outputs.should_skip == 'false'
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.check_version.outputs.should_skip == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(jq -r .version package.json)
          echo "Creating release for v$VERSION"
          gh release create "v$VERSION" --generate-notes
